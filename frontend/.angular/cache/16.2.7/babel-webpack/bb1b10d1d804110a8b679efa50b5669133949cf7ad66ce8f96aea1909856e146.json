{"ast":null,"code":"import { Emitters } from '../emiters/emitters';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\nexport class LoginComponent {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.email = \"\";\n    this.password = \"\";\n  }\n  login() {\n    let bodyData = {\n      \"email\": this.email,\n      \"password\": this.password\n    };\n    this.http.post(\"http://localhost:8000/api/login\", bodyData, {\n      withCredentials: true\n    }).subscribe(resultData => {\n      alert(resultData['user'].name + \" has been logged in\");\n      Emitters.authEmitter.emit(true);\n      //Emitters.dataEmitter.emit(resultData['user']) FOR SENDING DATA TO ANOTHER COMPONENT\n      this.router.navigate(['/temp']);\n    });\n    console.log(\"This runs\");\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 16,\n    vars: 6,\n    consts: [[1, \"container\", \"mt-4\"], [1, \"card\"], [1, \"form-group\"], [\"type\", \"email\", \"id\", \"email\", \"placeholder\", \"Enter email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"type\", \"password\", \"id\", \"password\", \"placeholder\", \"Enter password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mt-4\", 3, \"click\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n        i0.ɵɵtext(3, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\")(5, \"div\", 2)(6, \"label\");\n        i0.ɵɵtext(7, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.email = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\");\n        i0.ɵɵtext(11, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_13_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵtext(14, \"Login\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(15, \"div\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.email)(\"ngModelOptions\", i0.ɵɵpureFunction0(4, _c0));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.password)(\"ngModelOptions\", i0.ɵɵpureFunction0(5, _c0));\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Emitters","LoginComponent","constructor","http","router","email","password","login","bodyData","post","withCredentials","subscribe","resultData","alert","name","authEmitter","emit","navigate","console","log","_","i0","ɵɵdirectiveInject","i1","HttpClient","i2","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_input_ngModelChange_8_listener","$event","LoginComponent_Template_input_ngModelChange_12_listener","LoginComponent_Template_button_click_13_listener","ɵɵelement","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","_c0"],"sources":["D:\\471 Project\\frontend\\src\\app\\login\\login.component.ts","D:\\471 Project\\frontend\\src\\app\\login\\login.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Emitters } from '../emiters/emitters';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  constructor(private http: HttpClient,private router: Router  ) \n  {\n\n  }\n\n\n  email: string =\"\";\n  password: string =\"\";\n\n  login(){\n    \n    \n   \n      let bodyData = {\n        \"email\" : this.email,\n        \"password\" : this.password,\n      };\n  \n  \n      this.http.post(\"http://localhost:8000/api/login\",bodyData,{withCredentials: true}).subscribe((resultData: any)=>\n      {   \n          alert(resultData['user'].name + \" has been logged in\");\n          Emitters.authEmitter.emit(true);\n          //Emitters.dataEmitter.emit(resultData['user']) FOR SENDING DATA TO ANOTHER COMPONENT\n          this.router.navigate(['/temp'])\n\n\n      });\n      console.log(\"This runs\")\n      \n    \n  }\n\n}\n","<div class=\"container mt-4\" >\n\n    <div class=\"card\">\n        <h1>Login</h1>\n  \n  <form>\n    <div class=\"form-group\">\n        <label>Email</label>\n        <input type=\"email\" [(ngModel)]=\"email\" [ngModelOptions]=\"{standalone: true}\" class=\"form-control\" id=\"email\" placeholder=\"Enter email\">\n  \n      </div>\n  \n      <div class=\"form-group\">\n        <label>Password</label>\n        <input type=\"password\" [(ngModel)]=\"password\" [ngModelOptions]=\"{standalone: true}\" class=\"form-control\" id=\"password\" placeholder=\"Enter password\">\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary mt-4\" (click)=\"login()\" >Login</button>\n      <!--<p *ngIf=\"message !== null && message !== undefined\">{{message.name}} has been registered</p> -->\n  </form>\n    </div>\n  <div>\n  \n  \n  "],"mappings":"AAGA,SAASA,QAAQ,QAAQ,qBAAqB;;;;;;;;;;AAO9C,OAAM,MAAOC,cAAc;EAEzBC,YAAoBC,IAAgB,EAASC,MAAc;IAAvC,KAAAD,IAAI,GAAJA,IAAI;IAAqB,KAAAC,MAAM,GAANA,MAAM;IAMnD,KAAAC,KAAK,GAAU,EAAE;IACjB,KAAAC,QAAQ,GAAU,EAAE;EAJpB;EAMAC,KAAKA,CAAA;IAID,IAAIC,QAAQ,GAAG;MACb,OAAO,EAAG,IAAI,CAACH,KAAK;MACpB,UAAU,EAAG,IAAI,CAACC;KACnB;IAGD,IAAI,CAACH,IAAI,CAACM,IAAI,CAAC,iCAAiC,EAACD,QAAQ,EAAC;MAACE,eAAe,EAAE;IAAI,CAAC,CAAC,CAACC,SAAS,CAAEC,UAAe,IAAG;MAE5GC,KAAK,CAACD,UAAU,CAAC,MAAM,CAAC,CAACE,IAAI,GAAG,qBAAqB,CAAC;MACtDd,QAAQ,CAACe,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC;MAC/B;MACA,IAAI,CAACZ,MAAM,CAACa,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IAGnC,CAAC,CAAC;IACFC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;EAG5B;EAAC,QAAAC,CAAA,G;qBAjCUnB,cAAc,EAAAoB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAd1B,cAAc;IAAA2B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV3Bb,EAAA,CAAAe,cAAA,aAA6B;QAGjBf,EAAA,CAAAgB,MAAA,YAAK;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QAEpBjB,EAAA,CAAAe,cAAA,WAAM;QAEOf,EAAA,CAAAgB,MAAA,YAAK;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QACpBjB,EAAA,CAAAe,cAAA,eAAwI;QAApHf,EAAA,CAAAkB,UAAA,2BAAAC,uDAAAC,MAAA;UAAA,OAAAN,GAAA,CAAA9B,KAAA,GAAAoC,MAAA;QAAA,EAAmB;QAAvCpB,EAAA,CAAAiB,YAAA,EAAwI;QAI1IjB,EAAA,CAAAe,cAAA,aAAwB;QACff,EAAA,CAAAgB,MAAA,gBAAQ;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QACvBjB,EAAA,CAAAe,cAAA,gBAAoJ;QAA7Hf,EAAA,CAAAkB,UAAA,2BAAAG,wDAAAD,MAAA;UAAA,OAAAN,GAAA,CAAA7B,QAAA,GAAAmC,MAAA;QAAA,EAAsB;QAA7CpB,EAAA,CAAAiB,YAAA,EAAoJ;QAEtJjB,EAAA,CAAAe,cAAA,iBAAsE;QAAnBf,EAAA,CAAAkB,UAAA,mBAAAI,iDAAA;UAAA,OAASR,GAAA,CAAA5B,KAAA,EAAO;QAAA,EAAC;QAAEc,EAAA,CAAAgB,MAAA,aAAK;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;QAIxFjB,EAAA,CAAAuB,SAAA,WAAK;QApBPvB,EAAA,CAAAiB,YAAA,EAA6B;;;QAQDjB,EAAA,CAAAwB,SAAA,GAAmB;QAAnBxB,EAAA,CAAAyB,UAAA,YAAAX,GAAA,CAAA9B,KAAA,CAAmB,mBAAAgB,EAAA,CAAA0B,eAAA,IAAAC,GAAA;QAMhB3B,EAAA,CAAAwB,SAAA,GAAsB;QAAtBxB,EAAA,CAAAyB,UAAA,YAAAX,GAAA,CAAA7B,QAAA,CAAsB,mBAAAe,EAAA,CAAA0B,eAAA,IAAAC,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}