{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\nexport class LoginComponent {\n  constructor(http) {\n    this.http = http;\n    this.email = \"\";\n    this.password = \"\";\n  }\n  login() {\n    //\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 17,\n    vars: 6,\n    consts: [[1, \"container\", \"mt-4\"], [1, \"card\"], [1, \"form-group\"], [\"type\", \"email\", \"id\", \"email\", \"placeholder\", \"Enter email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"type\", \"password\", \"id\", \"password\", \"placeholder\", \"Enter password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mt-4\", 3, \"click\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n        i0.ɵɵtext(3, \"Registation\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\")(5, \"div\", 2)(6, \"label\");\n        i0.ɵɵtext(7, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.email = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\");\n        i0.ɵɵtext(11, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_13_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵtext(14, \"Register\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(15, \"div\");\n        i0.ɵɵtext(16, \" 351 \");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.email)(\"ngModelOptions\", i0.ɵɵpureFunction0(4, _c0));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.password)(\"ngModelOptions\", i0.ɵɵpureFunction0(5, _c0));\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["LoginComponent","constructor","http","email","password","login","_","i0","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_input_ngModelChange_8_listener","$event","LoginComponent_Template_input_ngModelChange_12_listener","LoginComponent_Template_button_click_13_listener","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","_c0"],"sources":["D:\\471 Project\\frontend\\src\\app\\login\\login.component.ts","D:\\471 Project\\frontend\\src\\app\\login\\login.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  constructor(private http: HttpClient){\n\n  }\n\n  email:string=\"\"\n  password:string=\"\"\n\n\n  login(){\n    //\n  }\n\n}\n","<div class=\"container mt-4\" >\n\n    <div class=\"card\">\n        <h1>Registation</h1>\n  \n  <form>\n    <div class=\"form-group\">\n        <label>Email</label>\n        <input type=\"email\" [(ngModel)]=\"email\" [ngModelOptions]=\"{standalone: true}\" class=\"form-control\" id=\"email\" placeholder=\"Enter email\">\n  \n      </div>\n  \n      <div class=\"form-group\">\n        <label>Password</label>\n        <input type=\"password\" [(ngModel)]=\"password\" [ngModelOptions]=\"{standalone: true}\" class=\"form-control\" id=\"password\" placeholder=\"Enter password\">\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary mt-4\" (click)=\"login()\" >Register</button>\n      <!--<p *ngIf=\"message !== null && message !== undefined\">{{message.name}} has been registered</p> -->\n  </form>\n    </div>\n  <div>\n  351\n  \n  "],"mappings":";;;;;;;;AAQA,OAAM,MAAOA,cAAc;EAEzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAIxB,KAAAC,KAAK,GAAQ,EAAE;IACf,KAAAC,QAAQ,GAAQ,EAAE;EAHlB;EAMAC,KAAKA,CAAA;IACH;EAAA;EACD,QAAAC,CAAA,G;qBAZUN,cAAc,EAAAO,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdX,cAAc;IAAAY,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR3BX,EAAA,CAAAa,cAAA,aAA6B;QAGjBb,EAAA,CAAAc,MAAA,kBAAW;QAAAd,EAAA,CAAAe,YAAA,EAAK;QAE1Bf,EAAA,CAAAa,cAAA,WAAM;QAEOb,EAAA,CAAAc,MAAA,YAAK;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QACpBf,EAAA,CAAAa,cAAA,eAAwI;QAApHb,EAAA,CAAAgB,UAAA,2BAAAC,uDAAAC,MAAA;UAAA,OAAAN,GAAA,CAAAhB,KAAA,GAAAsB,MAAA;QAAA,EAAmB;QAAvClB,EAAA,CAAAe,YAAA,EAAwI;QAI1If,EAAA,CAAAa,cAAA,aAAwB;QACfb,EAAA,CAAAc,MAAA,gBAAQ;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QACvBf,EAAA,CAAAa,cAAA,gBAAoJ;QAA7Hb,EAAA,CAAAgB,UAAA,2BAAAG,wDAAAD,MAAA;UAAA,OAAAN,GAAA,CAAAf,QAAA,GAAAqB,MAAA;QAAA,EAAsB;QAA7ClB,EAAA,CAAAe,YAAA,EAAoJ;QAEtJf,EAAA,CAAAa,cAAA,iBAAsE;QAAnBb,EAAA,CAAAgB,UAAA,mBAAAI,iDAAA;UAAA,OAASR,GAAA,CAAAd,KAAA,EAAO;QAAA,EAAC;QAAEE,EAAA,CAAAc,MAAA,gBAAQ;QAAAd,EAAA,CAAAe,YAAA,EAAS;QAI3Ff,EAAA,CAAAa,cAAA,WAAK;QACLb,EAAA,CAAAc,MAAA,aAEA;QAHAd,EAAA,CAAAe,YAAA,EAAK;;;QAZqBf,EAAA,CAAAqB,SAAA,GAAmB;QAAnBrB,EAAA,CAAAsB,UAAA,YAAAV,GAAA,CAAAhB,KAAA,CAAmB,mBAAAI,EAAA,CAAAuB,eAAA,IAAAC,GAAA;QAMhBxB,EAAA,CAAAqB,SAAA,GAAsB;QAAtBrB,EAAA,CAAAsB,UAAA,YAAAV,GAAA,CAAAf,QAAA,CAAsB,mBAAAG,EAAA,CAAAuB,eAAA,IAAAC,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}