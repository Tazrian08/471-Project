{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\nexport class RegisterComponent {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.name = \"\";\n    this.email = \"\";\n    this.password = \"\";\n  }\n  register() {\n    let bodyData = {\n      \"name\": this.name,\n      \"email\": this.email,\n      \"password\": this.password\n    };\n    this.http.post(\"http://localhost:8000/api/register\", bodyData).subscribe(resultData => {\n      this.message = resultData[\"user\"];\n      alert(this.message.name + \" has been registered\");\n      // this.name = '';\n      // this.email = '';\n      // this.password  = \"\";\n      this.router.navigate(['/login']);\n    });\n    console.log(\"This runs\");\n  }\n  static #_ = this.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 20,\n    vars: 9,\n    consts: [[1, \"container\", \"mt-4\"], [1, \"card\"], [1, \"form-group\"], [\"type\", \"text\", \"id\", \"name\", \"placeholder\", \"Enter Name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"type\", \"email\", \"id\", \"email\", \"placeholder\", \"Enter email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"type\", \"password\", \"id\", \"password\", \"placeholder\", \"Enter password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mt-4\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n        i0.ɵɵtext(3, \"Registation\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\")(5, \"div\", 2)(6, \"label\");\n        i0.ɵɵtext(7, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.name = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\");\n        i0.ɵɵtext(11, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.email = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 2)(14, \"label\");\n        i0.ɵɵtext(15, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_16_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"button\", 6);\n        i0.ɵɵtext(18, \"Register\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(19, \"div\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.name)(\"ngModelOptions\", i0.ɵɵpureFunction0(6, _c0));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.email)(\"ngModelOptions\", i0.ɵɵpureFunction0(7, _c0));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.password)(\"ngModelOptions\", i0.ɵɵpureFunction0(8, _c0));\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["RegisterComponent","constructor","http","router","name","email","password","register","bodyData","post","subscribe","resultData","message","alert","navigate","console","log","_","i0","ɵɵdirectiveInject","i1","HttpClient","i2","Router","_2","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","RegisterComponent_Template_input_ngModelChange_8_listener","$event","RegisterComponent_Template_input_ngModelChange_12_listener","RegisterComponent_Template_input_ngModelChange_16_listener","ɵɵelement","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","_c0"],"sources":["D:\\471 Project\\frontend\\src\\app\\register\\register.component.ts","D:\\471 Project\\frontend\\src\\app\\register\\register.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent {\r\n\r\n  constructor(private http: HttpClient, private router: Router ) \r\n  {\r\n\r\n  }\r\n\r\n\r\nname: string=\"\";\r\nemail: string=\"\";\r\npassword: string=\"\";\r\n\r\n\r\nregister()\r\n  {\r\n    \r\n   \r\n    let bodyData = {\r\n      \"name\" : this.name,\r\n      \"email\" : this.email,\r\n      \"password\" : this.password\r\n    };\r\n\r\n\r\n    this.http.post(\"http://localhost:8000/api/register\",bodyData).subscribe((resultData: any)=>\r\n    {\r\n        this.message=resultData[\"user\"];\r\n        alert(this.message.name + \" has been registered\")\r\n        // this.name = '';\r\n        // this.email = '';\r\n        // this.password  = \"\";\r\n        this.router.navigate(['/login']);\r\n    });\r\n    console.log(\"This runs\")\r\n  }\r\n\r\n}\r\n","<div class=\"container mt-4\" >\r\n\r\n    <div class=\"card\">\r\n        <h1>Registation</h1>\r\n  \r\n  <form>\r\n    <div class=\"form-group\">\r\n      <label>Name</label>\r\n      <input type=\"text\" [(ngModel)]=\"name\" [ngModelOptions]=\"{standalone: true}\" class=\"form-control\" id=\"name\" placeholder=\"Enter Name\">\r\n  \r\n    </div>\r\n  \r\n    <div class=\"form-group\">\r\n        <label>Email</label>\r\n        <input type=\"email\" [(ngModel)]=\"email\" [ngModelOptions]=\"{standalone: true}\" class=\"form-control\" id=\"email\" placeholder=\"Enter email\">\r\n  \r\n      </div>\r\n  \r\n      <div class=\"form-group\">\r\n        <label>Password</label>\r\n        <input type=\"password\" [(ngModel)]=\"password\" [ngModelOptions]=\"{standalone: true}\" class=\"form-control\" id=\"password\" placeholder=\"Enter password\">\r\n      </div>\r\n      <button type=\"submit\" class=\"btn btn-primary mt-4\" >Register</button>\r\n      <!--<p *ngIf=\"message !== null && message !== undefined\">{{message.name}} has been registered</p> -->\r\n  </form>\r\n    </div>\r\n  <div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}